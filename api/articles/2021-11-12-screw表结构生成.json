{"title":"Screw 表结构文档生成器","uid":"623349c970dc392040950ed80319ab9e","slug":"2021-11-12-screw表结构生成","date":"2021-11-11T16:00:00.000Z","updated":"2021-11-14T06:22:06.771Z","comments":true,"path":"api/articles/2021-11-12-screw表结构生成.json","keywords":null,"cover":[],"content":"<h2 id=\"1-screw开源项目简介\"><a href=\"#1-screw开源项目简介\" class=\"headerlink\" title=\"1. screw开源项目简介\"></a>1. screw开源项目简介</h2><h3 id=\"1-1-screw是什么\"><a href=\"#1-1-screw是什么\" class=\"headerlink\" title=\"1.1 screw是什么\"></a>1.1 screw是什么</h3><p><strong>一句话简介：</strong>screw是一个简洁好用的数据库表结构文档生成器</p>\n<p><strong>作者开发缘由：</strong>在企业级开发中、我们经常会有编写数据库表结构文档的时间付出，从业以来，待过几家企业，关于数据库表结构文档状态：要么没有、要么有、但都是手写、后期运维开发，需要手动进行维护到文档中，很是繁琐、如果忘记一次维护、就会给以后工作造成很多困扰、无形中制造了很多坑留给自己和后人。</p>\n<p><strong>我使用它的缘由：</strong>以前都是用Word来维护公司项目的数据库设计文档，后续每次修改数据库都要记录到文档中，太过麻烦，而且合作开发过程中可能会有的同事更改了数据库而没有及时记入文档，为后续的维护带来了麻烦。</p>\n<p><strong>Github项目地址：</strong><a href=\"https://github.com/pingfangushi/screw\">screw</a>（内置使用教程及常见问题的解决方法，本文内容大多摘自于此）</p>\n<h3 id=\"1-2-screw的特点及支持\"><a href=\"#1-2-screw的特点及支持\" class=\"headerlink\" title=\"1.2 screw的特点及支持\"></a>1.2 screw的特点及支持</h3><p><strong>特点：</strong>[1] 简洁、轻量、设计良好   [2] 多数据库支持  [3] 多种格式文档  [4] 灵活扩展 [5] 支持自定义模板</p>\n<p><strong>数据库支持：</strong>MySQL、MariaDB、TIDB、Oracle、SqlServer、PostgreSQL、Cache DB</p>\n<p><strong>文档生成支持：</strong>html、md、word</p>\n<h2 id=\"2-如何使用screw生成数据库设计文档\"><a href=\"#2-如何使用screw生成数据库设计文档\" class=\"headerlink\" title=\"2. 如何使用screw生成数据库设计文档\"></a>2. 如何使用screw生成数据库设计文档</h2><h3 id=\"2-1-配置Maven开发环境\"><a href=\"#2-1-配置Maven开发环境\" class=\"headerlink\" title=\"2.1 配置Maven开发环境\"></a>2.1 配置Maven开发环境</h3><p><strong>（1）maven下载安装</strong></p>\n<p>[1] 官网下载Maven：<a href=\"https://maven.apache.org/download.cgi\">Apache Maven</a></p>\n<p>[2] 将下载的<code>apache-maven-3.6.3-bin.zip</code>移动到文件夹内解压</p>\n<p><strong>（2）maven环境变量配置</strong></p>\n<p>[1] 右键“计算机”，选择“属性”，之后点击“高级系统设置”，点击“环境变量”</p>\n<p>[2] 环境变量配置：</p>\n<ul>\n<li><p>新建系统变量  <code>MAVEN_HOME</code> 变量值：<code>D:\\Maven\\apache-maven-3.6.3</code></p>\n</li>\n<li><p>编辑系统变量  <code>Path</code>    添加变量值： <code>;%MAVEN_HOME%\\bin</code></p>\n</li>\n</ul>\n<p>[3] 验证：在cmd界面输入：<code>mvn --version</code></p>\n<p><strong>（3）maven设置</strong>  </p>\n<p>修改maven的settings.xml配置文件的profiles标签为：</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">&lt;profile&gt;\n\t&lt;id&gt;jdk‐1.8&lt;&#x2F;id&gt;\n\t&lt;activation&gt;\n\t\t&lt;activeByDefault&gt;true&lt;&#x2F;activeByDefault&gt;\n\t\t&lt;jdk&gt;1.8&lt;&#x2F;jdk&gt;\n\t&lt;&#x2F;activation&gt;\n\t&lt;properties&gt;\n\t\t&lt;maven.compiler.source&gt;1.8&lt;&#x2F;maven.compiler.source&gt;\n\t\t&lt;maven.compiler.target&gt;1.8&lt;&#x2F;maven.compiler.target&gt;\n\t\t&lt;maven.compiler.compilerVersion&gt;1.8&lt;&#x2F;maven.compiler.compilerVersion&gt;\n\t&lt;&#x2F;properties&gt;\n&lt;&#x2F;profile&gt;</code></pre>\n\n<p><strong>（4）将maven整合进IDEA</strong></p>\n<p>打开IDEA——Configure——设置——构建，执行，部署——构建工具——Maven——Maven home directory、User settings file、Local repoository（自己新建），这三项选中自己安装的那个。</p>\n<p><img src=\"https://i.loli.net/2021/11/12/sA4kuZitMQDPlXg.png\"></p>\n<h3 id=\"2-2-创建SpringBoot项目\"><a href=\"#2-2-创建SpringBoot项目\" class=\"headerlink\" title=\"2.2  创建SpringBoot项目\"></a>2.2  创建SpringBoot项目</h3><p>此处使用Spring Initializer快速创建Springboot项目，如果你手上有现成的项目，拿来直接用即可，就不必重新创建了。</p>\n<h3 id=\"2-3-配置screw并使用其生成文档\"><a href=\"#2-3-配置screw并使用其生成文档\" class=\"headerlink\" title=\"2.3 配置screw并使用其生成文档\"></a>2.3 配置screw并使用其生成文档</h3><p>官网提供了“普通方式”和“Maven插件”两种使用方式，本文只讲“普通方式”的使用方法，以最常见的MySQL和Oracle为例。</p>\n<p><strong>（1）配置Maven依赖</strong></p>\n<p>将以下代码添加到pom.xml文件中，然后打开Maven窗口，点击Lifecycle里的install安装依赖包</p>\n<p>注：screw核心的版本号填最新的，<a href=\"https://search.maven.org/artifact/cn.smallbun.screw/screw\">点此查看最新版本号</a></p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">&lt;!-- screw核心 --&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;cn.smallbun.screw&lt;&#x2F;groupId&gt;\n    &lt;artifactId&gt;screw-core&lt;&#x2F;artifactId&gt;\n    &lt;version&gt;1.0.5&lt;&#x2F;version&gt;\n&lt;&#x2F;dependency&gt;\n&lt;!-- HikariCP --&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;com.zaxxer&lt;&#x2F;groupId&gt;\n    &lt;artifactId&gt;HikariCP&lt;&#x2F;artifactId&gt;\n    &lt;version&gt;3.4.5&lt;&#x2F;version&gt;\n&lt;&#x2F;dependency&gt;\n&lt;!--mysql driver--&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;mysql&lt;&#x2F;groupId&gt;\n    &lt;artifactId&gt;mysql-connector-java&lt;&#x2F;artifactId&gt;\n    &lt;version&gt;8.0.20&lt;&#x2F;version&gt;\n&lt;&#x2F;dependency&gt;\n&lt;!--oracle driver--&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;com.oracle.ojdbc&lt;&#x2F;groupId&gt;\n    &lt;artifactId&gt;ojdbc8&lt;&#x2F;artifactId&gt;\n    &lt;version&gt;19.3.0.0&lt;&#x2F;version&gt;\n&lt;&#x2F;dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;cn.easyproject&lt;&#x2F;groupId&gt;\n    &lt;artifactId&gt;orai18n&lt;&#x2F;artifactId&gt;\n    &lt;version&gt;12.1.0.2.0&lt;&#x2F;version&gt;\n&lt;&#x2F;dependency&gt;</code></pre>\n\n<p><strong>（2）编写数据库设计文档的生成代码</strong></p>\n<p>在test目录下创建一个测试类<strong>ExpDataSourceFileUtil.java</strong>，编写数据库设计文档的生成代码如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.export;\n\nimport cn.smallbun.screw.core.Configuration;\nimport cn.smallbun.screw.core.engine.EngineConfig;\nimport cn.smallbun.screw.core.engine.EngineFileType;\nimport cn.smallbun.screw.core.engine.EngineTemplateType;\nimport cn.smallbun.screw.core.execute.DocumentationExecute;\nimport cn.smallbun.screw.core.process.ProcessConfig;\nimport com.zaxxer.hikari.HikariConfig;\nimport com.zaxxer.hikari.HikariDataSource;\n\nimport javax.sql.DataSource;\nimport java.util.ArrayList;\n\npublic class ExpDataSourceFileUtil &#123;\n\n    static String fileName &#x3D; &quot;。。。数据库设计文档&quot;;&#x2F;&#x2F;文档名\n    static String version &#x3D; &quot;1.0.0&quot;;&#x2F;&#x2F;文档版本\n    static String description &#x3D; &quot;。。。数据库设计文档&quot;;\n    static String driverClassName &#x3D; &quot;oracle.jdbc.driver.OracleDriver&quot;;&#x2F;&#x2F;oracle\n   &#x2F;&#x2F; static String driverClassName &#x3D; &quot;com.mysql.cj.jdbc.Driver&quot;;&#x2F;&#x2F;mysql8.0\n   &#x2F;&#x2F; static String driverClassName &#x3D; &quot;com.mysql.jdbc.Driver&quot;&#x2F;&#x2F;mysql8.0以下\n\n    &#x2F;&#x2F;oracle\n    static String jdbcUrl &#x3D; &quot;jdbc:oracle:thin:@10.1.60.30:1521:orcl?useUnicode&#x3D;true&amp;useJDBCCompliantTimezoneShift&#x3D;true&amp;useLegacyDatetimeCode&#x3D;false&amp;serverTimezone&#x3D;CTT&quot;;\n    &#x2F;&#x2F;mysql\n    &#x2F;&#x2F;static String jdbcUrl &#x3D; &quot;jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;awardwinning?useUnicode&#x3D;true&amp;useJDBCCompliantTimezoneShift&#x3D;true&amp;useLegacyDatetimeCode&#x3D;false&amp;serverTimezone&#x3D;CTT&quot;;\n    static String userName &#x3D; &quot;nissan&quot;;\n    static String passWord &#x3D; &quot;nissan&quot;;\n    static String fileOutputDir &#x3D; &quot;F:\\\\sql&quot;;&#x2F;&#x2F;输出文件路径\n\n    public static  void generateStructure()&#123;\n        &#x2F;&#x2F;数据源\n        HikariConfig hikariConfig &#x3D; new HikariConfig();\n        hikariConfig.setDriverClassName(driverClassName);\n        hikariConfig.setJdbcUrl(jdbcUrl);\n        hikariConfig.setUsername(userName);\n        hikariConfig.setPassword(passWord);\n        &#x2F;&#x2F;设置可以获取tables remarks信息\n        hikariConfig.addDataSourceProperty(&quot;useInformationSchema&quot;, &quot;true&quot;);\n        hikariConfig.setMinimumIdle(2);\n        hikariConfig.setMaximumPoolSize(5);\n        DataSource dataSource &#x3D; new HikariDataSource(hikariConfig);\n        &#x2F;&#x2F;生成配置\n        EngineConfig engineConfig &#x3D; EngineConfig.builder()\n                &#x2F;&#x2F;生成文件路径\n                .fileOutputDir(fileOutputDir)\n                &#x2F;&#x2F;打开目录\n                .openOutputDir(true)\n                &#x2F;&#x2F;文件类型  支持 MD,HTML,WORD\n                .fileType(EngineFileType.MD)\n                &#x2F;&#x2F;生成模板实现\n                .produceType(EngineTemplateType.freemarker)\n                &#x2F;&#x2F;自定义文件名称\n                .fileName(fileName+&quot;V&quot;+version).build();\n\n        &#x2F;&#x2F;忽略表\n        ArrayList&lt;String&gt; ignoreTableName &#x3D; new ArrayList&lt;&gt;();\n        &#x2F;&#x2F;ignoreTableName.add(&quot;test_user&quot;);\n        &#x2F;&#x2F;忽略表前缀\n        ArrayList&lt;String&gt; ignorePrefix &#x3D; new ArrayList&lt;&gt;();\n        ignorePrefix.add(&quot;test_&quot;);\n        &#x2F;&#x2F;忽略表后缀\n        ArrayList&lt;String&gt; ignoreSuffix &#x3D; new ArrayList&lt;&gt;();\n        ignoreSuffix.add(&quot;_test&quot;);\n        ProcessConfig processConfig &#x3D; ProcessConfig.builder()\n                &#x2F;&#x2F;指定生成逻辑、当存在指定表、指定表前缀、指定表后缀时，将生成指定表，其余表不生成、并跳过忽略表配置\n                &#x2F;&#x2F;根据名称指定表生成\n                .designatedTableName(new ArrayList&lt;&gt;())\n                &#x2F;&#x2F;根据表前缀生成\n                .designatedTablePrefix(new ArrayList&lt;&gt;())\n                &#x2F;&#x2F;根据表后缀生成\n                .designatedTableSuffix(new ArrayList&lt;&gt;())\n                &#x2F;&#x2F;忽略表名\n                .ignoreTableName(ignoreTableName)\n                &#x2F;&#x2F;忽略表前缀\n                .ignoreTablePrefix(ignorePrefix)\n                &#x2F;&#x2F;忽略表后缀\n                .ignoreTableSuffix(ignoreSuffix).build();\n        &#x2F;&#x2F;配置\n        Configuration config &#x3D; Configuration.builder()\n                &#x2F;&#x2F;版本\n                .version(version)\n                &#x2F;&#x2F;描述\n                .description(description)\n                &#x2F;&#x2F;数据源\n                .dataSource(dataSource)\n                &#x2F;&#x2F;生成配置\n                .engineConfig(engineConfig)\n                &#x2F;&#x2F;生成配置\n                .produceConfig(processConfig)\n                .build();\n        &#x2F;&#x2F;执行生成\n        new DocumentationExecute(config).execute();\n    &#125;\n\n    public static void main(String[] args) &#123;\n        ExpDataSourceFileUtil.generateStructure();\n    &#125;\n\n&#125;\n</code></pre>\n\n<p>必须修改项：数据库driver、数据库URL、数据库用户名、数据库用户密码</p>\n<p>可选修改项：生成文件路径、文件类型、自定义文件名称、版本</p>\n<p><strong>（3）运行screw生成数据库设计文档</strong></p>\n<p>直接运行<strong>ExpDataSourceFileUtil.java</strong>代码，即可生成数据库设计文档。</p>\n<p><img src=\"https://i.loli.net/2021/11/14/f3l64rROpMbemN8.png\"></p>\n<h2 id=\"3-常见问题及解决方案\"><a href=\"#3-常见问题及解决方案\" class=\"headerlink\" title=\"3. 常见问题及解决方案\"></a>3. 常见问题及解决方案</h2><p><strong>[1] 生成后文档乱码？</strong></p>\n<p>MySQL：URL加入<code>?characterEncoding=UTF-8</code>。</p>\n<p><strong>[2] Caused by: java.lang.NoSuchFieldError: VERSION_2_3_30？</strong></p>\n<p>检查项目<code>freemarker</code>依赖，这是由于版本过低造成的，升级版本为<code>2.3.30</code>即可。</p>\n<p><strong>[3] java.lang.AbstractMethodError: oracle.jdbc.driver.T4CConnection.getSchema()Ljava/lang/String;</strong></p>\n<p>这是因为oracle驱动版本过低造成的，删除或屏蔽目前驱动版本，驱动添加升级为以下版本：</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">&lt;dependency&gt;\n   &lt;groupId&gt;com.oracle.ojdbc&lt;&#x2F;groupId&gt;\n   &lt;artifactId&gt;ojdbc8&lt;&#x2F;artifactId&gt;\n   &lt;version&gt;19.3.0.0&lt;&#x2F;version&gt;\n&lt;&#x2F;dependency&gt;\n&lt;dependency&gt;\n   &lt;groupId&gt;cn.easyproject&lt;&#x2F;groupId&gt;\n   &lt;artifactId&gt;orai18n&lt;&#x2F;artifactId&gt;\n   &lt;version&gt;12.1.0.2.0&lt;&#x2F;version&gt;\n&lt;&#x2F;dependency&gt;</code></pre>\n\n<p><strong>[4] MySQL数据库表和列字段有说明、生成文档没有说明？</strong></p>\n<p>URL链接加入<code>useInformationSchema=true</code>即可。</p>\n<p><strong>[5] java.lang.AbstractMethodError: com.mysql.jdbc.JDBC4Connection.getSchema()Ljava/lang/String;</strong></p>\n<p>这是因为mysql驱动版本过低造成的，升级mysql驱动版本为最新即可。</p>\n<h2 id=\"4-参考资料\"><a href=\"#4-参考资料\" class=\"headerlink\" title=\"4. 参考资料\"></a>4. 参考资料</h2><p>[1] <a href=\"https://github.com/pingfangushi/screw\">screw：简洁好用的数据库表结构文档生成器 from Github</a></p>\n<p>[2] <a href=\"https://www.bilibili.com/video/BV1Et411Y7tQ?p=7\">尚硅谷-使用向导快速创建Springboot项目 from Bilibili</a></p>\n<p>[3] <a href=\"https://database.51cto.com/art/202008/623177.htm\">实用！一键生成数据库文档，堪称数据库界的Swagger from 51CTO</a></p>\n<p>[4] <a href=\"https://www.cnblogs.com/zimug/p/13431093.html\">超给力，一键生成数据库文档-数据库表结构逆向工程 from 博客园</a></p>\n<p>[5] <a href=\"https://www.bilibili.com/video/av456302504/\">使用 screw 数据库文档生成工具快速生成数据库文档 from Blilibili</a></p>\n","feature":false,"text":"1. screw开源项目简介1.1 screw是什么一句话简介：screw是一个简洁好用的数据库表结构文档生成器 作者开发缘由：在企业级开发中、我们经常会有编写数据库表结构文档的时间付出，从业以来，待过几家企业，关于数据库表结构文档状态：要么没有、要么有、但都是手写、后期运维开发...","link":"","photos":[],"count_time":{"symbolsCount":"9k","symbolsTime":"8 mins."},"categories":[{"name":"Database","slug":"Database","count":1,"path":"api/categories/Database.json"}],"tags":[{"name":"screw","slug":"screw","count":1,"path":"api/tags/screw.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-screw%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">1. screw开源项目简介</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-screw%E6%98%AF%E4%BB%80%E4%B9%88\"><span class=\"toc-text\">1.1 screw是什么</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-screw%E7%9A%84%E7%89%B9%E7%82%B9%E5%8F%8A%E6%94%AF%E6%8C%81\"><span class=\"toc-text\">1.2 screw的特点及支持</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8screw%E7%94%9F%E6%88%90%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3\"><span class=\"toc-text\">2. 如何使用screw生成数据库设计文档</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E9%85%8D%E7%BD%AEMaven%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">2.1 配置Maven开发环境</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E5%88%9B%E5%BB%BASpringBoot%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">2.2  创建SpringBoot项目</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-%E9%85%8D%E7%BD%AEscrew%E5%B9%B6%E4%BD%BF%E7%94%A8%E5%85%B6%E7%94%9F%E6%88%90%E6%96%87%E6%A1%A3\"><span class=\"toc-text\">2.3 配置screw并使用其生成文档</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">3. 常见问题及解决方案</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99\"><span class=\"toc-text\">4. 参考资料</span></a></li></ol>","author":{"name":"破风","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的灵魂","socials":{"github":"https://mingzhiGit.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Aurora 自定义容器（Custom Containers）","uid":"b695af22372019b5213d1466cd06b4ba","slug":"2021-11-06-Aurora-自定义容器（Custom-Containers）","date":"2021-11-05T16:00:00.000Z","updated":"2022-01-03T15:30:28.008Z","comments":true,"path":"api/articles/2021-11-06-Aurora-自定义容器（Custom-Containers）.json","keywords":null,"cover":"https://s2.loli.net/2022/01/03/kdaGMbFu3eOXlYZ.jpg","text":"Custom Container Excemple Since version 1.5.0, Aurora added custom containers including tip, warning, danger and details. 自从版本 1.5.0，Aurora ...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"aurora","slug":"aurora","count":3,"path":"api/categories/aurora.json"}],"tags":[{"name":"project_blog","slug":"project-blog","count":3,"path":"api/tags/project-blog.json"}],"author":{"name":"破风","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的灵魂","socials":{"github":"https://mingzhiGit.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Telegram","uid":"3bc7e775fd8c6b383c223619f66832c1","slug":"2021-11-10-telegram","date":"2021-11-09T16:00:00.000Z","updated":"2021-11-10T13:34:47.146Z","comments":true,"path":"api/articles/2021-11-10-telegram.json","keywords":null,"cover":[],"text":"1. Telegram使用指南1.1 Telegram简介1.1.1 Telegram是什么Telegram（简称TG）是跨平台的即时通信软件，其客户端是自由及开放源代码软件，但服务器是专有软件。用户可以相互交换加密与自毁消息，发送照片、影片所有类型文件。官方提供手机版、桌面版和...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"tools","slug":"tools","count":2,"path":"api/categories/tools.json"}],"tags":[{"name":"telegram","slug":"telegram","count":1,"path":"api/tags/telegram.json"}],"author":{"name":"破风","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的灵魂","socials":{"github":"https://mingzhiGit.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}