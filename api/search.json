[{"id":"b863cc00f6c4d425a3632341e0f215be","title":"github+hexo（Aurora）搭建博客","content":"闲的无聊，没事儿搭搭博客，做个记录，以后也方便追溯。\n搭建环境准备\n安装node.js\n安装git\ngithub账户配置\n安装hexo\nhexo发布到github上\n\n安装node.jsnodeJs下载链接下载完一路无脑式安装，安装完成之后，电脑快捷键win+r打开桌面运行窗口,输入cmd,回车，在命令行中依次输入\n\n\n\n\n\n\n\n\n\nnode -vnpm -v \n\n出现如图所示对应的版本信息说明node 安装成功\n安装gitgit下载地址 安装方式基本和node一样，安装完成后，也在命令行窗口输入\n\n\n\n\n\n\n\n\n\ngit –version\n出现如图所示的git版本信息说明安装成功，桌面右键鼠标，能看到git gui here 和git bash here，待会要用到git bash here\n\ngithub账户配置github注册地址 一定要正确填写邮箱信息！\n\n完成后，打开自己刚才填写的邮箱，会看到github发给你的注册确认信息，确认注册，结束注册流程（注：一定要确认注册，否则无法使用gh-pages）\n\n创建属于自己的仓库，登录之后，点击也买你右上角加号，选择new repository\n\n\n\n在打开的界面，Repository name 的输入框输入Owner.github.io   Owner为前面输入框内的信息，注意：Repository name输入的信息格式一定为 yourname.github.io ,此路径为对外访问唯一的博客仓库的路径，一个github账号一般情况下只有这么一个。Description为本仓库描述信息，可随意填写。点击create repository 即可创建仓库。对应位置如图所示：\n\n\n\n创建仓库完成后，进入仓库界面，开启gh-pages功能，点击界面右侧的settings,打开此仓库的配置界面，往下滑，直到看见github pages,如图：\n\n\n\n点击Automatic page generator，Github将会自动替你创建出一个gh-pages的页面。 如果你的配置没有问题，那么大约15分钟之后，yourname.github.io这个网址就可以正常访问了~   如果yourname.github.io已经可以正常访问了，那么Github的配置已经全部结束了。\n到此搭建hexo博客的相关环境配置已经完成，下面开始讲解Hexo的相关配置\n安装hexo在命令行窗口，使用npm 命令安装Hexo\n\n\n\n\n\n\n\n\n\nnpm install -g hexo-cli\n安装过程如果过慢，可以采用cnpm 命令 或者搭梯子，搭梯子教程可以参考我这篇文章【ssr翻墙 】，安装完成后，继续执行命令\n\n\n\n\n\n\n\n\n\nnpm install hexo –save\n完成后，在命令行继续输入 hexo -v ,检验hexo 是否安装完成\n\n\n\n\n\n\n\n\n\nhexo -v\n出现如下的一些配置信息，说明安装成功\n\nhexo相关配置\n打开电脑本地的一个磁盘空间，最好不要是C盘，创建一个文件夹，不要有中文、空格什么的，此文件夹用来存放hexo相关信息和你的博客，发布到github上也是在此文件夹下发布的。\n\n进入此文件夹，右键鼠标，点击 git bash here,进入git 的命令行窗口，输入：（如果失败，请参考下面链接里的内容）\n\n\n\n\n\n\n\n\n\n\n\nhexo init \n\n此时，git会拉取相应的配置信息，约50M,完成后，命令行窗口，输入：\n\n\n\n\n\n\n\n\n\n\nnpm  install\n\n自动安装你需要的组件，等待安装完成即可\n\n关联Hexo与github page大概分为以下几步\n\n配置git个人信息\n配置Deployment如果你之前已经配置好git个人信息，请跳过这一个 步骤\n\n1、设置Git的user name和email：(如果是第一次的话)\n\n\n\n\n\n\n\n\n\ngit config –global user.name “你github名”git config –global user.email “github邮箱地址”\n2、生成密钥，生成密钥之前先检查是否已经存在SSH key\n\n\n\n\n\n\n\n\n\ncd ~/.ssh\nls\n如果列出的文件中有id_sa ,id_isa.pub 说明已经存在ssh key了，可以直接跳过生成密钥这一步。\n3、生成密钥，运行下面命令，一路回车即可，密钥存储的路径默认为C:\\Users\\Administrator.ssh\n\n\n\n\n\n\n\n\n\n ssh-keygen -t rsa -C “github邮箱地址”\n4、添加密钥到ssh-agent\n确保 ssh-agent 是可用的。ssh-agent是一种控制用来保存公钥身份验证所使用的私钥的程序，其实ssh-agent就是一个密钥管理器，运行ssh-agent以后，使用ssh-add将私钥交给ssh-agent保管，其他程序需要身份验证的时候可以将验证申请交给ssh-agent来完成整个认证过程。\n\n\n\n\n\n\n\n\n\neval “$(ssh-agent -s)”\n添加生成的SSH key 到ssh-agent\n\n\n\n\n\n\n\n\n\nssh-add ~/.ssh/id_rsa\n5、登录github，添加ssh\n将id.rsa.pub文件里的内容复制出来，打开github-&gt;settings-&gt;SSH and GPG keys -&gt;add ssh key ,把id.rsa.pub内容复制进去，点击完成。\n6、测试，git bash 命令窗口输入以下信息，回车，能看到对应成功的提示信息，则说明成功。\n\n\n\n\n\n\n\n\n\nssh -T &#x67;&#x69;&#x74;&#x40;&#x67;&#x69;&#116;&#104;&#117;&#x62;&#46;&#99;&#111;&#109;\n配置Deployment在_config.yml文件中，找到Deployment，然后按照如下修改：\n\n\n\n\n\n\n\n\n\ndeploy:       type: git       repo: &#103;&#x69;&#116;&#x40;&#x67;&#105;&#116;&#x68;&#x75;&#x62;&#x2e;&#x63;&#x6f;&#x6d;:yourname/yourname.github.io.git       branch: main 或者 master ，这个看你仓库选择哪个分支\nrepo 为你仓库的地址，branch为你的仓库分支，本人用main，注意风格为yml格式，否则会有问题。\n写博客、发布文章新建一篇博客，执行下面的命令：\n\n\n\n\n\n\n\n\n\nhexo new post “article title”\n这时候在我的 电脑的目录下 F:\\hexo\\source\\ posts ,将会看到 article title.md 文件，或者完成一个md格式的文档，直接放到_post文件夹下等待部署发布。\n用MarDown编辑器打开就可以编辑文章了,推荐markDown编辑器，Typora，用过那么多markdown编辑器，什么印象啦，有道云啦，都是弟弟，typora软件的移植和灵活性是最强的。\n运行生成、部署命令：\n注意需要提前安装一个扩展：npm install hexo-deployer-git –save\n\n\n\n\n\n\n\n\n\nhexo clean //清空旧信息\nhexo g   // 生成\nhexo d   // 部署\n注：hexo cl&amp;hexo g &amp; hexo d 不太好用，亲测有时候文档部署不上去，所以一步步执行命令吧。\n部署成功后访问 你的地址，https://yourName.github.io,将可以看到生成的文章。github有时候生成比较慢，等待一段时间。\n也可以本地访问，本地访问需要执行的命令是：\n\n\n\n\n\n\n\n\n\nhexo clean\nhexo g\nhexo s  //运行本地服务\n此时，访问localhost:4000,便可看到你本地的博客运行情况。也可以指定端口:hexo server -p “yourport”\n注：在把hexo部署到github过程中，如果没有出现错误但是没有部署上去，或者报没有权限的错误，请执行以下语句便可\n\n\n\n\n\n\nTIP\ngit config –global user.name “你github名”\ngit config –global user.email “github邮箱地址”\ngit config –global http.sslVerify “false”\n\n\n参考资料\nGit下载安装及设置详细教程\n\nGitHub+Hexo 搭建个人网站详细教程\n\n手把手教你用Hexo+Github 搭建属于自己的博客\n\nGit ssh 配置及使用\n\n解决 hexo init 失败问题\n\nfatal: unable to access “xxx‘‘: OpenSSL SSL_read:Connection was reset, errno 10054\n\nhexo API\n\nGit SSH 配置及使用\n\n\n","slug":"2021-11-07-github+hexo搭建博客","date":"2021-11-06T16:00:00.000Z","categories_index":"aurora","tags_index":"project_blog","author_index":"破风"},{"id":"bb44344e81a2e22dca5289a48dd66276","title":"ssr翻墙","content":"1. 翻墙简介1.1 什么是翻墙\n通常特指在中国大陆绕过互联网审查封锁技术，实现对外网的访问。由于“翻墙”在中国大陆境内成为敏感词汇，现在更常使用“科学上网”来代替。\n突破网络审查的软件通常被称作翻墙软件，俗称梯子。它们着眼于获得被屏蔽的网站内容，并在访问受限网站时隐藏自己的真实地址信息。\n\n1.2 为什么要翻墙\n翻墙的必要性：\n科学上网决定着我们的网络生活质量，国内的互联网生态环境实在是太差了。Google、Github、Telegram、Youtube等一系列好用的网站和软件在中国大陆都被屏蔽掉了或者访问受限，缺少了竞争，国内各互联网企业都在想法设法的恰烂钱，劣币驱逐良币。\n\n翻墙是否违法？如果违法，那中国政府就有上千万人要抓，经济上没有可行性，所以基本上个人翻墙违不违法是个伪命题，日常查个Google，看个Youtube没必要提心吊胆，不要在外网上发表政治言论、干违法的事情就好了。\n参考：因为翻墙被请去喝茶？翻墙被抓？中国大陆境内有多少翻墙用户？给你彻彻底底的讲清楚翻墙安全的话题！from YouTube\n\n\n1.3 怎样翻墙1.3.1 翻墙原理​       通俗的说，现在你有一个代理服务器在香港，比如你现在想要访问google，你的电脑发出请求，流量通过socks5连接发到你在香港的     服务器上，然后再由你在香港的服务器去访问google，再把访问结果传回你的电脑，这样就实现了翻墙。\n\nSS/SSR、v2ray的VMess加密协议：把你的网络流量加密封装成没有任何特征的数据包，在墙的角度来看，你的流量就是未知的数据流量【加密流量型】\n\nTrojan和v2ray的WebSocket+TLS模式：全部伪装成正常的HTTPS流量，这就和我们平时访问网站的流量形态是一样的，诱骗墙认为它就是普通的HTTPS，从而不被识别【伪装流量型】\n\n\n​       加密流量型虽然墙不知道你里面的内容是什么，但它可以判断数据量的大小，从而阻断你。伪装流量型对于墙来说，互联网HTTPS的数据是海量的，它想要在这种正常的海量的数据中区分出哪个是梯子，是有很大难度的，不会贸然的去阻断你。因而目前伪装型科学上网更加稳定。\n项目地址：ShadowsocksR_Github存档、v2ray_Github、Trojan_Github\n参考：Trojan灭了V2ray？Trojan翻墙速度超乎想象?Trojan V2ray速度对比 from YouTuBe\n1.3.2 翻墙方法​      以下分别介绍一下付费和免费的翻墙方法，但我强烈建议有长期翻墙需求的人选择付费方案。免费方案很少有可靠的，而且会对你的上网带来风险，你的流量经过恶意服务器，个人隐私可能被破解。以下的免费方案仅供参考，出了问题本人概不负责！\n付费方案：\n[1] 自建或者购买收费机场的SSR、v2ray、Trojan代理服务节点（机场存在跑路风险，尽量选择大机场）\n\n我用过的机场： CordCloud 、ssrcloud 、养鸡场 、忍者云、极简（部分机场官网已经被墙或更换域名）\n其他机场测评推荐详见：浅谈部分机场（SS/SSR提供商）的使用_DuyaoSS【加精】\n\n[2] 购买国外的收费VPN（比如ExpressVPN，我以前用过，有一个7天的免费试用期）\n\n注意：国内VPN服务商，政府很容易拿到他们的服务器日志，如果他们真的这样做了，你翻墙做了什么，一览无余。\n\n免费方案：\n[1] 没有了 ，不推荐了。\n翻墙注意事项：\n[1] 外网不是法外之地，不要在墙外干违法的事情，不要发表传播政治言论，不要传播翻墙工具并以此盈利。\n[2] 不要在网上泄露机场节点订阅链接以及自建节点的链接，小白用户在TG群里问问题一定要对链接打码，不然会被别人白嫖（机场的订阅链接对于每个用户而言是唯一的，连接的设备超出规定会被机场主封禁）\n1.4 常见术语解释机场一般都会有TG群组，建议加入，可以了解机场和GFW的最新动态。群组里经常会出现以下术语，建议提前弄清楚。\n详见：一份不负责任的机场使用手册_DuyaoSS【加精】\n\nGFW：防火长城（Great Firewall，简称GFW），国人所说的“被墙”即指网站内容被防火长城所屏蔽或者指服务器的通讯被封阻，“翻墙”也被引申为突破网络审查浏览中国大陆境外被屏蔽的网站或使用服务的行为。\nVPN：现在国人语境下的 VPN 就是翻墙软件的意思，不要和原始语义混为一谈。\n翻墙软件：提供代理服务的软件，Shad­owrocket俗称小火箭、Shadowsocks/ShadowsocksR简称SS/SSR俗成小飞机（提供SS/SSR服务的网站叫做机场）、Quan­tu­mult X俗称 QuanX。\n代理模式：直连模式就是流量不走代理 ；PAC模式简单说就是国内地址不走代理，国外走代理；全局模式就是不管国内国外，所有流量通过代理服务器访问。\nTG：即Telegram，是一个跨平台的即时通信软件，提供友好的即时交流，多平台自动同步，可连接预览，有强大的 bot 功能，需翻墙才能使用。\n被打 / D：即 DDOS（分布式拒绝服务）攻击，是一种网络攻击手法，其目的在于使目标计算机的网络或系统资源耗尽，使服务暂时中断或停止，导致其正常用户无法访问。\n被 C/CC 了：CC 攻击（Chal­lenge Col­lap­sar）是 DDOS的一种，攻击者借助代理服务器生成指向受害主机的合法请求，实现 DDOS 和伪装就叫 CC。\n\n2. 购买VPS并ssh连接及域名解析2.1 购买国外VPS\n我一直用的Bandwagon host，速度和稳定性都不错，价格也比较亲民，支持使用支付宝来付款（有的VPS服务商仅支持Visa卡和Paypal支付，对于国内用户的付款造成了困难）注：每年美国的“黑色星期五（感恩节过后的星期五）”会打折，有优惠码，优惠力度比较大，不急用的话建议此时购买。\n用阿里云香港服务器，建议购买一核-两G-40G配置，购买年限越长，优惠力度越大，香港服务器ping值会比国外ping值低很多，对于国内用户来说会比较快一些，但各有利弊，用户请自行取舍。\n\n2.2 NameSilo域名解析购买过程就不赘述了，域名解析过程如下：\n[1] 打开NameSilo官网，操作流程按下面提供的参考资料进行（懒了，不想码了）\n\n注：在nameSilo购买域名时国外的域名，如果搭建要搭建网站，配置此域名，需使用国外服务器，阿里云香港服务器也可以，如果使用国外域名解析国内服务器是解析不到的，另外使用国内服务器搭建网站使用域名时还需要备案，比较麻烦。\n\n[2] 一般十分钟左右 DNS 解析记录会生效（可以直接在cmd里ping域名验证是否解析成功）\n参考资料\n[1] 2019 Namesilo 购买域名 解析域名 图文教程 from CSDN\n[2] Namesilo 中文教程：域名购买及解析使用方法 | Namesilo 优惠码 from 个人站点\n[3] Namesilo域名解析DNS的过程 from 玩机大学\n2.3 Finalshell通过SSH连接VPS操作步骤\n​      打开Fianlshell，文件——新建，名称（随便起）、协议（选择SSH）、主机（填VPS的IP）、端口号（填VPS的端口号）,填写用户名，密码，点击连接即可。\n​      强烈推荐FinalShell，它包含了Xshell和Xftp的功能，还带有服务器性能显示，使用方式基本与Xshell一致\n3. 在VPS自建翻墙服务端3.1 一键脚本搭建SSR服务器端ShadowsocksR是一个高性能安全的socks5代理，基于和兼容Shadowsocks，帮助用户更加安全访问全球网络。ShadowsocksR简称为SSR，支持复杂协议和混淆，有更强的抗干扰能力。\n详见：搭建ShadowsocksR [内置：文字教程+视频教程+客户端下载]【加精】\n一键安装脚本（根据提示进行配置，如果不懂一路回车选择默认配置即可）：\nwget -N --no-check-certificate https:&#x2F;&#x2F;makeai.cn&#x2F;bash&#x2F;ssrmu.sh &amp;&amp; chmod +x ssrmu.sh &amp;&amp; bash ssrmu.sh\n\n3.2 一键脚本搭建Trojan-go服务器端Trojan是一款新型的代理工具，其特点是代理流量和伪装网站共用服务器的443端口，使代理流量被识别为正常的网站浏览，从而降低被封锁的机率。\nTrojan-Go则是在Trojan的基础上，经过二次开发，优化了原版的一些功能，额外添加了新的功能，比如Trojan-Go支持多路复用，支持CDN流量中转。\n详见：Trojan-Go一键安装脚本（Debian/Ubuntu）[内置：文字教程+客户端下载]【加精】\n一键安装脚本（根据提示进行配置，需要提前准备好已经解析过的域名）：\nbash &lt;(curl -sL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;phlinhng&#x2F;v2ray-tcp-tls-web&#x2F;master&#x2F;install.sh) &amp;&amp; v2script\n\n注：建议将生成的节点网址用二维码生成器制作节点二维码，方便导入。另外安装后再次启动只需要输入 v2script即可。\n4. 翻墙客户端的使用4.1 Windows端推荐使用ShadowsocksR：极简\n解压导入节点即可使用（导入方式有：服务器订阅、扫描二维码、剪贴板批量导入ssr://链接、手动输入）\n一般配置：PAC模式（绕过局域网和大陆），不要开负载均衡（实际没啥用，而且可能被机场判定为共享账号）\n另注：如果你需要用Windows对节点进行批量测速，可使用SSCap工具\n[1] 下载安装SSCap客户端：SSCapV4.0.rar\n[2] 右键ShadowsocksR客户端——服务器——服务器连接统计——导出——复制所有节点链接\n[3] 打开SSCap客户端——点击下方左数第四个按钮（Add shadowsocks server from ss link）——把链接复制上去——随便选择一个节点右键，点击“通过TCP检测所有节点”\n详见：利用sscap批量检测ssr节点的可用性 from YouTuBe\n4.2 iOS / iPad OS端推荐使用Shadowrocket（支持Trogan，支持批量测速，不支持挂载脚本）和Quantumult X（不支持Trojan，支持批量测速，支持挂载脚本），使用方法同上，具体选择哪个根据自己需求而定：\n\n如果你只是为了翻墙，那么选择Shadowrocket（2.99美刀，对于翻墙来说足够好用）需要在美区APPStore下载，国区是没有的。\n如果你不但想翻墙，还想挂载脚本，那么选择Quantumult X（7.99美刀，不但能翻墙还有很多高级功能，不推荐，功能强大了，但是慢了一点，相比小火箭）\n\n4.3 Andorid端推荐使用SSRR：Android\n传到手机直接安装——点最上面的ShadowsocksR——点“+”——导入节点（扫描二维码、手动输入）\n4.4 Mac、Linux、路由器端Mac端：极简（使用方法与Windows差不多，不多赘述）\nLinux端：linux\n","slug":"2021-11-07-ssr翻墙","date":"2021-11-06T16:00:00.000Z","categories_index":"tools","tags_index":"ssr 翻墙","author_index":"破风"},{"id":"b695af22372019b5213d1466cd06b4ba","title":"Aurora 自定义容器（Custom Containers）","content":"Custom Container Excemple\n\n\n\n\n\n\n\n\nSince version 1.5.0, Aurora added custom containers including tip, warning, danger and details.\n\n\n\n\n\n\n\n\n\n自从版本 1.5.0，Aurora 添加了与 VuePress 一样的自定义容器, 包括 提示 (tip)、注意 (warning)、特别注意 (danger) 和 隐藏内容 (details)\n\nBlock quote\n\n\n\n\n\n\n\n\nnormal quote block.\n&gt; normal quote block.\n\n\nCustom ContainersTip Container\n\n\n\n\n\nTIP\nNormal Tips Containers\n\n\n:::tip\nNormal Tips Containers\n:::\n\n\n\n\n\n\n\nCustom header\nCustom header \n\ntips content\ntips new line\n\n\n\n:::tip Custom header\nCustom header \n- tips content\n- tips new line\n:::\n\n\nWaring Container\n\n\n\n\n\n\nWARNING\nWarning!!!\n\n\n:::warning\nWarning!!!\n:::\n\n\n\n\n\n\n\n\nWARNING\nWarning!!!  bold\n\n\n:::warning\n**Warning!!!**  **bold**\n:::\n\n\nDanger Container\n\n\n\n\n\n\nWARNING\nDanger!!!\n\n\n:::danger\nDanger!!!\n:::\n\n\nDetail container\nClick to see more\nFusce rutrum venenatis eros in hendrerit. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nullam eget risus egestas, aliquet ipsum sed, volutpat tortor. Proin finibus tortor ac mauris finibus rutrum. Nullam tincidunt arcu eu urna ullamcorper, eu ultricies turpis ornare. Morbi id sollicitudin orci. Proin lobortis vehicula nibh a ornare. Cras sodales eu ligula quis fermentum. Proin eu ultrices leo, quis iaculis justo. Sed dictum, nulla sit amet imperdiet commodo, libero sapien semper justo, ut lobortis elit nunc vitae ante. Nullam lobortis odio quam, ac condimentum elit posuere vitae. Sed ornare, odio et rutrum varius, lorem eros gravida urna, in pharetra sapien justo non magna.\n\ndetails content\ndetails new line\n\nconsole.log(&#39;hello world&#39;)\n\n\n\n:::details Click to see more\n\nFusce rutrum venenatis eros in hendrerit. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nullam eget risus egestas, aliquet ipsum sed, volutpat tortor. Proin finibus tortor ac mauris finibus rutrum. Nullam tincidunt arcu eu urna ullamcorper, eu ultricies turpis ornare. Morbi id sollicitudin orci. Proin lobortis vehicula nibh a ornare. Cras sodales eu ligula quis fermentum. Proin eu ultrices leo, quis iaculis justo. Sed dictum, nulla sit amet imperdiet commodo, libero sapien semper justo, ut lobortis elit nunc vitae ante. Nullam lobortis odio quam, ac condimentum elit posuere vitae. Sed ornare, odio et rutrum varius, lorem eros gravida urna, in pharetra sapien justo non magna.\n\n- details content\n- details new line\n\n&#96;&#96;&#96;javascript\nconsole.log(&#39;hello world&#39;)\n&#96;&#96;&#96;\n\n:::\n\n","slug":"2021-11-06-Aurora-自定义容器（Custom-Containers）","date":"2021-11-05T16:00:00.000Z","categories_index":"aurora","tags_index":"project_blog","author_index":"破风"},{"id":"3bc7e775fd8c6b383c223619f66832c1","title":"Telegram","content":"1. Telegram使用指南1.1 Telegram简介1.1.1 Telegram是什么Telegram（简称TG）是跨平台的即时通信软件，其客户端是自由及开放源代码软件，但服务器是专有软件。用户可以相互交换加密与自毁消息，发送照片、影片所有类型文件。官方提供手机版、桌面版和网页版等多种平台客户端，同时官方开放API，因此拥有许多第三方的客户端可供选择，其中多款内置中文。\n\n软件定位：加密通讯软件\n\n软件用途：点对点加密通讯，了解IT行业趋势，交流技术问题，获取生活娱乐资源\n\n软件优势：加密通讯、全平台同步、历史记录永不自动删除、随时删除或修改消息、传输文件无限制、链接摘要预览、已阅显示、10W人上限的超大群组、收藏贴纸方便、UI好看、轻量、永久无广告\n\n软件劣势：软件需翻墙使用，导致国内社交圈子几乎没有人用、无管制所以什么样的人都有，有些不健康的东西不利于祖国花骨朵的成长、有些技术群组是外文的，没有内置的翻译功能。\n\n\n1.1.2 Telegram客户端界面\n\n\n\n1.1.3 Telegram注意事项1）该软件需要翻墙使用；2）里面所有个人信息都不要填真实的；3）隐私全部设置为不允许任何人或者仅联系人可见；4）默认6个月不登录自动删除账号，最长可更改为1年；5）黑产、色情、邪教的频道不要关注，不要发表政治言论，电报群有网警常驻。\n1.2 Telegram基本配置1.2.1 下载安装、配置代理1）PC端：Telegram官网下载 安装并完成信息注册后，需要配置代理设置——高级——网络与代理——使用自定义代理——添加代理——协议：SOCKS5、IP：127.0.0.1、端口：1080\n2）iPad端和iPhone端：直接在App Store下载（国区就有，无需美区账号），开了小火箭就能用，无需额外配置代理。\n1.2.2 客户端汉化默认语言选项里没有中文，需要自行汉化，三端均是如此。\n打开https://telegram.me/Tele_zh_CN加入“电报简体中文化”频道\n找2019.4.16的消息记录，点击“ 简体中文(@zh_CN 版):tg://setlanguage?lang=classic-zh-cn”一键汉化。\n1.3 Telegram使用说明1.3.1 频道推荐[1] Telegram群组/频道/机器人推荐 from Newlearnerの小站\n[2] Telegram频道搜索机器人:https://t.me/soqun\n注：需要啥频道，可以直接在Telegram的搜索框里搜。\n1.3.2 解除+86号码私聊限制1）问题描述：\nTelegram发送私聊消息时遇到如下提示：\n\n\n\n\n\n\nTIP\nSorry,you can only send messages to mutual contacts at the momet.中文：抱歉，您现在只能给双向联系人发送消息\n\n\n2）原因：\n\n前段时间币圈利用Telegram 的便利，大量发广告和拉人进群；\nTelegram 限制了+86 大陆手机号绑定的账号的私聊；\n+86 的账号不能给非+86 的账号主动发起私聊，+86 的账号能给+86 主动发起私聊的；\n刚刚注册的+86 账号也不能发起私聊的，过段时间就OK了。\n\n3）解决办法：\n向官方机器人@SpamBot 发送消息申请(跟着提示操作就行) ，半小时左右即可解除限制\n4）操作步骤：\n[1] 发送内容 /start [2] 点击按钮 But I can’t message non-contacts!\n[3] 点击按钮 NO,I’ll never do any of this! [4] 发送内容 accident\n注：为了更好的保护个人隐私，建议使用Temporary SMS and Disposable Numbers获取虚拟的美国电话号码注册Telegram\n1.3.3 导出Telegram贴纸[1] 在Telegram中搜索 @StickerSetBot 机器人\n[2] 输入 /newpack 开启机器人，会提示 OK now send me stickers or sticker set links (200 max). 意思是现在可以开始发送要导出的贴纸或贴纸设置链接，一次有200张的限制\n[3] 选择需要导出的贴纸包，点“分享贴纸”按钮，即可生成贴纸分享链接，将此链接发送给机器人\n[4] 发送完成后输入 /finish 结束，等待下载完成即可（以压缩包的形式下载到TG的下载目录中）\n参考资料[1] 自由与失控：Telegram创始人和他的“黑客帝国” from 知乎\n[2] Telegram——真正定义即时通讯 from 知乎\n[3] Telegram群组/频道/机器人推荐 from Newlearnerの小站\n[4] 导出Telegram贴纸为QQ表情包 from 小马哥哥\n[5] 解除 Telegram +86号码私聊限制 from VPS收割者\n","slug":"2021-11-10-telegram","date":"2021-11-09T16:00:00.000Z","categories_index":"tools","tags_index":"telegram","author_index":"破风"},{"id":"489299eb16528d0f25387bed1010ad6f","title":"浅谈Aurora","content":"关于博主创建的aurora主题目前还处于开发维护阶段，因此里面会有些许的小问题，但是谁开发的项目里，没有一点点bug和兼容性的问题呢，对吧，这里给正在努力喝咖啡的博主点赞。\n首先，诚挚的在这里 献上博主的教程链接Hexo Aurora教程\n博主的教程已经非常的详细明了了，接下来我会对我搭建此博客遇到的问题和注意的事项列举下来，供各位参考\n1-安装aurora主题包安装主题包两种方式 在hexo的安装根目录下安装\n\n\n\n\n\n\n\n\n\nyarn add hexo-theme-aurora\nnpm install hexo-theme-aurora –save\n个人倾向于npm install \n注：直接用命令安装，不要去github上把项目拉下来放到hexo的安装路径下，现在github上的aurora项目跟命令行安装的aurora版本是不一致的，里面也存在很多问题，不建议使用，当然，如果你爱折腾，请随意。\n2-生成主题配置博主在文章里只列出Linux 和MacOS 的做法，windows 操作我补充一下\n\n安装好hexo aurora 主题\n在你的hexo安装目录下一层层的找 node_modules-&gt;hexo-theme-aurora-&gt;_config.yml\n将此文件复制一份到hexo的根目录下，并更名为_config.aurora.yml\n\n3-使用Gitalk作为评论的插件配置属性：\n\n\n\n属性\n描述\n\n\n\nenable\n使用true开启, 使用false关闭\n\n\nautoExpand\n如果设置为true, Github 评论将会自动展开。否者默认会收起。\n\n\nclientID\nclientID 是你 GitHub 的 Oauth APP 中提供的。\n\n\nclientSecret\nclientSecret 是你 GitHub 的 Oauth APP 中提供的。\n\n\nrepo\n仓库名, 比如: https://github.com/auroral-ui/**hexo-theme-aurora-docs**, 名字就是 hexo-theme-Aurora-docs\n\n\nowner\n仓库拥有者的用户名. 比如: auroral-ui\n\n\nadmin\n仓库管理员的用户名，这里可以填写多个管理员。(也用于标记那个评论是博主的)\n\n\nid\n确保唯一性和长度小于 50，如果您使用pathname，请确保长度小于 50 个字符或使用uid代替，这个有更好的兼容性 (如果您之前使用其他主题，谁用 uid 将可能无法显示您之前的评论)\n\n\nlanguage\n使用 en 设置为英文，使用 cn 设置为中文.\n\n\ndistractionFreeMode\n与 Facebook 一样的专注模式，点击评论输入框时会让背景变暗。true 来开启 false 来关闭\n\n\nrecentComment\n是否开启最近评论功能。\n\n\nproxy\nGitHub 授权请求的反向代理\n\n\n由于在搭建过程中，评论功能一直异常，受到了极大的侮辱，所以将在此细致的说明Gitalk的使用。\n1-在github上搭建一个仓库\n在github首页点击Repositories,点击new ,新建一个仓库，专门用来存放评论信息\n\n\n\n在弹出的界面填写你要创建的仓库名称，不要有空格什么的，然后点击 create repository\n\n\n\n在新创建仓库的settings 中，启用issues\n\n\n\n完成后记得初始化issues,自己添加一条，就是个评论的信息，随便添加\n\n\n\n此时，仓库搭建完成\n\n2-创建OAuth Application\n创建OAuth Application 是为了让GitTalk有权限去操作git仓库。 Oauth Application创建链接\n\n\nApplication name 为你应用名称，最好跟你仓库名称一致\nHomepage URL 为你评论仓库的路径。如：https://github.com/owner/yourRepoName\nAuthorization callback URL 为你博客的访问路径 。如：https://owner.github.io\n以上三条务必填写正确，完成后，点击创建即可\n\n进入创建的应用 ，获取 Client ID ,Client secrets\n\n\n3-Gitalk配置相关信息\n在hexo 根目录的_config_aurora.yml中，找到 gitalk\n\n\n将步骤2中获取的信息，填写到clientID 和clientSecret中\nrepo:你建的仓库的名称\nowner:你github上的Owner,你的github名，这个别填错了\n重新部署，发布，此时评论功能就可以使用了。\n\n参考资料\nGitalk配置和安装说明\nHexo使用Gitalk设置评论区\nGitalk Error:Not Found\n\n","slug":"2021-11-09-浅谈Aurora","date":"2021-11-08T16:00:00.000Z","categories_index":"aurora","tags_index":"project_blog","author_index":"破风"}]